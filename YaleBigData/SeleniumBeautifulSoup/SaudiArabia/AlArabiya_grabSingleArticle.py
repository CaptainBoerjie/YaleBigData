# Saudi Arabia - Al Arabiya
# https://www.alarabiya.net

# This code requires Selenium because the html is generated by javascript and so
# BS alone is unable to find <html> tags in the source because none have been generated

# This code uses BeautifulSoup to grab the title, article date, and article text from
# a single article

import requests
from bs4 import BeautifulSoup
from selenium.webdriver import Firefox
from selenium.webdriver.firefox.options import Options


def grabPage(url):

    opts = Options()
    opts.set_headless()

    assert opts.set_headless
    browser = Firefox(options=opts)
    browser.get(url)

    page = browser.page_source
    soup = BeautifulSoup(page, 'lxml')

    title_box = soup.find('div', attrs={'class': 'article-hdr'}).find('h1')
    date_box = soup.find('time').get('datetime')
    article_box = soup.find('div', attrs={'id': 'body-text'}).find_all('p')

    try:
        title = title_box.text.strip()
        date = date_box
        article = ''
        for a in article_box:
            article += a.text.strip()

        return [title,date,article]

    except AttributeError as e:
        return([None,None,None])

if __name__ == "__main__":

    page = 'https://www.alarabiya.net/ar/saudi-today/2019/02/15/%D8%A7%D9%84%D8%AC%D8%A8%D9%8A%D8%B1-%D9%85%D8%A4%D8%AA%D9%85%D8%B1-%D9%88%D8%A7%D8%B1%D8%B3%D9%88-%D8%A3%D9%83%D8%AF-%D8%B9%D9%84%D9%89-%D8%A7%D9%84%D8%AA%D8%B5%D8%AF%D9%8A-%D9%84%D8%A7%D9%8A%D8%B1%D8%A7%D9%86.html'

    output = grabPage(page)
    for o in range (0,len(output)):
        print(output[o])